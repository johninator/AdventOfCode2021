fn main() {
    
    let mut ages : Vec<i64> = vec![1,3,1,5,5,1,1,1,5,1,1,1,3,1,1,4,3,1,1,2,2,4,2,1,3,3,2,4,4,4,1,3,1,1,4,3,1,5,5,1,1,3,4,2,1,5,3,4,5,5,2,5,5,1,5,5,2,1,5,1,1,2,1,1,1,4,4,1,3,3,1,5,4,4,3,4,3,3,1,1,3,4,1,5,5,2,5,2,2,4,1,2,5,2,1,2,5,4,1,1,1,1,1,4,1,1,3,1,5,2,5,1,3,1,5,3,3,2,2,1,5,1,1,1,2,1,1,2,1,1,2,1,5,3,5,2,5,2,2,2,1,1,1,5,5,2,2,1,1,3,4,1,1,3,1,3,5,1,4,1,4,1,3,1,4,1,1,1,1,2,1,4,5,4,5,5,2,1,3,1,4,2,5,1,1,3,5,2,1,2,2,5,1,2,2,4,5,2,1,1,1,1,2,2,3,1,5,5,5,3,2,4,2,4,1,5,3,1,4,4,2,4,2,2,4,4,4,4,1,3,4,3,2,1,3,5,3,1,5,5,4,1,5,1,2,4,2,5,4,1,3,3,1,4,1,3,3,3,1,3,1,1,1,1,4,1,2,3,1,3,3,5,2,3,1,1,1,5,5,4,1,2,3,1,3,1,1,4,1,3,2,2,1,1,1,3,4,3,1,3];

    for i_round in 0..256 {
      perform_aging(&mut ages);
      perform_reproduction(&mut ages);
    }

    println!("No. of fish: {}", ages.len());
}

fn perform_aging(ages : &mut Vec<i64>) {

    ages.iter_mut().for_each(|x| *x-=1);
}


fn perform_reproduction(ages : &mut Vec<i64>) {
    let mut counter_new = 0;
    for age in ages.iter_mut().filter(|x| **x<0) {
        *age = 6;
        counter_new += 1;
    }
    for i in 0..counter_new {
        ages.push(8);
    }
}
